The NOP grammar is expression-based, like in all Lisps. Below is the formal
definition of the grammar.

SExp:			Literal | Symbol | Value | Function | Method | List ( SExp* )
			 	
Expression:		AtomExpression | ListExpression

AtomExpression: SymbolExpression | ValueExpression | LiteralExpression
				
SymbolExpression: 	Symbol
ValueExpression:  	Value
LiteralExpression:	Literal

ListExpression:	QuoteExpression |
				IfExpression |
				BeginExpression |
				DefineExpression |
				LambdaExpression |
				MethodCallExpression |
				FunctionCallExpression

QuoteExpression: 	List ( Symbol( quote ) Expression )
IfExpression:		List ( Symbol( if ) Expression Expression Expression )
BeginExpression: 	List ( Symbol( begin ) Expression+ )
DefineExpression:	List ( Symbol( define ) Symbol Expression )
LambdaExpression:	List ( Symbol( lambda ) List ( Symbol* ) Expression+ )
MethodCallExpression: List ( Expression Method Expression* )
FunctionCallExpression: List ( Expression+ )